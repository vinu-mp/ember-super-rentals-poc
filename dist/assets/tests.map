{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","ember-super-rentals/tests/acceptance/ember-super-rentals-test.js","ember-super-rentals/tests/integration/components/jumbo-test.js","ember-super-rentals/tests/integration/components/map-test.js","ember-super-rentals/tests/integration/components/navbar-test.js","ember-super-rentals/tests/integration/components/rental-test.js","ember-super-rentals/tests/integration/components/rental/detailed-test.js","ember-super-rentals/tests/integration/components/rental/image-test.js","ember-super-rentals/tests/integration/components/rentals-test.js","ember-super-rentals/tests/integration/components/rentals/filter-test.js","ember-super-rentals/tests/integration/components/share-button-test.js","ember-super-rentals/tests/test-helper.js","ember-super-rentals/tests/unit/adapters/application-test.js","ember-super-rentals/tests/unit/models/rental-test.js","ember-super-rentals/tests/unit/routes/about-test.js","ember-super-rentals/tests/unit/routes/contact-test.js","ember-super-rentals/tests/unit/routes/index-test.js","ember-super-rentals/tests/unit/routes/rental-test.js","ember-super-rentals/tests/unit/serializers/application-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"ember-super-rentals/tests/acceptance/ember-super-rentals-test\", [\"qunit\", \"@ember/test-helpers\", \"ember-qunit\"], function (_qunit, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Acceptance | ember super rentals', function (hooks) {\n    (0, _emberQunit.setupApplicationTest)(hooks);\n    (0, _qunit.test)('visiting /', async function (assert) {\n      await (0, _testHelpers.visit)('/');\n      assert.equal((0, _testHelpers.currentURL)(), '/');\n      assert.dom('nav').exists();\n      assert.dom('h1').hasText('SuperRentals');\n      assert.dom('h2').hasText('Welcome to Super Rentals!');\n      assert.dom('.jumbo a.button').hasText('About us');\n      await (0, _testHelpers.click)('.jumbo a.button');\n      assert.equal((0, _testHelpers.currentURL)(), '/about');\n    });\n    (0, _qunit.test)('viewing the details of a rental property', async function (assert) {\n      await (0, _testHelpers.visit)('/');\n      assert.dom('.rental').exists({\n        count: 3\n      });\n      await (0, _testHelpers.click)('.rental:first-of-type a');\n      assert.equal((0, _testHelpers.currentURL)(), '/rentals/grand-old-mansion');\n    });\n    (0, _qunit.test)('visiting /rentals/grand-old-mansion', async function (assert) {\n      await (0, _testHelpers.visit)('/rentals/grand-old-mansion');\n      assert.equal((0, _testHelpers.currentURL)(), '/rentals/grand-old-mansion');\n      assert.dom('nav').exists();\n      assert.dom('h1').containsText('SuperRentals');\n      assert.dom('h2').containsText('Grand Old Mansion');\n      assert.dom('.share.button').hasText('Share on Twitter');\n      let button = (0, _testHelpers.find)('.share.button');\n      let tweetURL = new URL(button.href);\n      assert.equal(tweetURL.host, 'twitter.com');\n      assert.equal(tweetURL.searchParams.get('url'), `${window.location.origin}/rentals/grand-old-mansion`);\n    });\n    (0, _qunit.test)('visiting /getting-in-touch', async function (assert) {\n      await (0, _testHelpers.visit)('/getting-in-touch');\n      assert.equal((0, _testHelpers.currentURL)(), '/getting-in-touch');\n      assert.dom('h2').hasText('Contact Us');\n      assert.dom('.jumbo a.button').hasText('About us');\n      await (0, _testHelpers.click)('.jumbo a.button');\n      assert.equal((0, _testHelpers.currentURL)(), '/about');\n    });\n  });\n});","define(\"ember-super-rentals/tests/integration/components/jumbo-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | jumbo', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders the content inside a jumbo header with a tomster', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Jumbo>Hello World</Jumbo>\n      */\n      {\n        \"id\": \"I+q5iC61\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"Hello World\\\"]],[]]]]]],[],false,[\\\"jumbo\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.jumbo').exists();\n      assert.dom('.jumbo').hasText('Hello World');\n      assert.dom('.jumbo .tomster').exists();\n    });\n  });\n});","define(\"ember-super-rentals/tests/integration/components/map-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"ember-super-rentals/config/environment\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _environment) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | map', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders a map image for the specified parameters', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Map\n            @lat=\"37.7797\"\n            @lng=\"-122.4184\"\n            @zoom=\"10\"\n            @width=\"150\"\n            @height=\"120\"\n          />\n      */\n      {\n        \"id\": \"IdNm1oWT\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@lat\\\",\\\"@lng\\\",\\\"@zoom\\\",\\\"@width\\\",\\\"@height\\\"],[\\\"37.7797\\\",\\\"-122.4184\\\",\\\"10\\\",\\\"150\\\",\\\"120\\\"]],null]],[],false,[\\\"map\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.map img').exists().hasAttribute('alt', 'Map image at coordinates 37.7797,-122.4184').hasAttribute('src').hasAttribute('width', '150').hasAttribute('height', '120');\n      let {\n        src\n      } = (0, _testHelpers.find)('.map img');\n      let token = encodeURIComponent(_environment.default.MAPBOX_ACCESS_TOKEN);\n      assert.ok(src.startsWith('https://api.mapbox.com/'), 'the src starts with \"https://api.mapbox.com/\"');\n      assert.ok(src.includes('-122.4184,37.7797,10'), 'the src should include the lng,lat,zoom parameter');\n      assert.ok(src.includes('150x120@2x'), 'the src should include the width,height and @2x parameter');\n      assert.ok(src.includes(`access_token=${token}`), 'the src should include the escaped access token');\n    });\n    (0, _qunit.test)('it updates the `src` attribute when the arguments change', async function (assert) {\n      this.setProperties({\n        lat: 37.7749,\n        lng: -122.4194,\n        zoom: 10,\n        width: 150,\n        height: 120\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Map\n            @lat={{this.lat}}\n            @lng={{this.lng}}\n            @zoom={{this.zoom}}\n            @width={{this.width}}\n            @height={{this.height}}\n          />\n      */\n      {\n        \"id\": \"Em6bIFrN\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@lat\\\",\\\"@lng\\\",\\\"@zoom\\\",\\\"@width\\\",\\\"@height\\\"],[[30,0,[\\\"lat\\\"]],[30,0,[\\\"lng\\\"]],[30,0,[\\\"zoom\\\"]],[30,0,[\\\"width\\\"]],[30,0,[\\\"height\\\"]]]],null]],[],false,[\\\"map\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      let img = (0, _testHelpers.find)('.map img');\n      assert.ok(img.src.includes('-122.4194,37.7749,10'), 'the src should include the lng,lat,zoom parameter');\n      assert.ok(img.src.includes('150x120@2x'), 'the src should include the width,height and @2x parameter');\n      this.setProperties({\n        width: 300,\n        height: 200,\n        zoom: 12\n      });\n      assert.ok(img.src.includes('-122.4194,37.7749,12'), 'the src should include the lng,lat,zoom parameter');\n      assert.ok(img.src.includes('300x200@2x'), 'the src should include the width,height and @2x parameter');\n      this.setProperties({\n        lat: 47.6062,\n        lng: -122.3321\n      });\n      assert.ok(img.src.includes('-122.3321,47.6062,12'), 'the src should include the lng,lat,zoom parameter');\n      assert.ok(img.src.includes('300x200@2x'), 'the src should include the width,height and @2x parameter');\n    });\n    (0, _qunit.test)('the default alt attribute can be overridden', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Map\n            @lat=\"37.7797\"\n            @lng=\"-122.4184\"\n            @zoom=\"10\"\n            @width=\"150\"\n            @height=\"120\"\n            alt=\"A map of San Francisco\"\n          />\n      */\n      {\n        \"id\": \"KTAr5rIA\",\n        \"block\": \"[[[8,[39,0],[[24,\\\"alt\\\",\\\"A map of San Francisco\\\"]],[[\\\"@lat\\\",\\\"@lng\\\",\\\"@zoom\\\",\\\"@width\\\",\\\"@height\\\"],[\\\"37.7797\\\",\\\"-122.4184\\\",\\\"10\\\",\\\"150\\\",\\\"120\\\"]],null]],[],false,[\\\"map\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.map img').hasAttribute('alt', 'A map of San Francisco');\n    });\n    (0, _qunit.test)('the src, width and height attributes cannot be overridden', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Map\n            @lat=\"37.7797\"\n            @lng=\"-122.4184\"\n            @zoom=\"10\"\n            @width=\"150\"\n            @height=\"120\"\n            src=\"/assets/images/teaching-tomster.png\"\n            width=\"200\"\n            height=\"300\"\n          />\n      */\n      {\n        \"id\": \"gHiVpqW5\",\n        \"block\": \"[[[8,[39,0],[[24,\\\"src\\\",\\\"/assets/images/teaching-tomster.png\\\"],[24,\\\"width\\\",\\\"200\\\"],[24,\\\"height\\\",\\\"300\\\"]],[[\\\"@lat\\\",\\\"@lng\\\",\\\"@zoom\\\",\\\"@width\\\",\\\"@height\\\"],[\\\"37.7797\\\",\\\"-122.4184\\\",\\\"10\\\",\\\"150\\\",\\\"120\\\"]],null]],[],false,[\\\"map\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.map img').hasAttribute('src', /^https:\\/\\/api\\.mapbox\\.com\\//).hasAttribute('width', '150').hasAttribute('height', '120');\n    });\n  });\n});","define(\"ember-super-rentals/tests/integration/components/navbar-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | navbar', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Navbar />\n      */\n      {\n        \"id\": \"Fxy8E5qS\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"navbar\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(this.element).hasText(''); // Template block usage:\n\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Navbar>\n              template block text\n            </Navbar>\n          \n      */\n      {\n        \"id\": \"kiRmRujy\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        template block text\\\\n      \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"navbar\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(this.element).hasText('template block text');\n    });\n  });\n});","define(\"ember-super-rentals/tests/integration/components/rental-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | rental', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders information about a rental property', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      this.setProperties({\n        rental: {\n          title: 'Grand Old Mansion',\n          owner: 'Veruca Salt',\n          city: 'San Francisco',\n          location: {\n            lat: 37.7749,\n            lng: -122.4194\n          },\n          category: 'Estate',\n          type: 'Standalone',\n          bedrooms: 15,\n          image: 'https://upload.wikimedia.org/wikipedia/commons/c/cb/Crane_estate_(5).jpg',\n          description: 'This grand old mansion sits on over 100 acres of rolling hills and dense redwood forests.'\n        }\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Rental @rental={{this.rental}} />\n      */\n      {\n        \"id\": \"BECEasIg\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@rental\\\"],[[30,0,[\\\"rental\\\"]]]],null]],[],false,[\\\"rental\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('article').hasClass('rental');\n      assert.dom('article h3').hasText('Grand Old Mansion');\n      assert.dom('article .detail.owner').includesText('Veruca Salt');\n      assert.dom('article .detail.type').includesText('Standalone');\n      assert.dom('article .detail.location').includesText('San Francisco');\n      assert.dom('article .detail.bedrooms').includesText('15');\n      assert.dom('article .image').exists();\n      assert.dom('article .map').exists();\n    });\n  });\n});","define(\"ember-super-rentals/tests/integration/components/rental/detailed-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | rental/detailed', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.setProperties({\n        rental: {\n          id: 'grand-old-mansion',\n          title: 'Grand Old Mansion',\n          owner: 'Veruca Salt',\n          city: 'San Francisco',\n          location: {\n            lat: 37.7749,\n            lng: -122.4194\n          },\n          category: 'Estate',\n          type: 'Standalone',\n          bedrooms: 15,\n          image: 'https://upload.wikimedia.org/wikipedia/commons/c/cb/Crane_estate_(5).jpg',\n          description: 'This grand old mansion sits on over 100 acres of rolling hills and dense redwood forests.'\n        }\n      });\n    });\n    (0, _qunit.test)('it renders a header with a share button', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Rental::Detailed @rental={{this.rental}} />\n      */\n      {\n        \"id\": \"ooVFKl9K\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@rental\\\"],[[30,0,[\\\"rental\\\"]]]],null]],[],false,[\\\"rental/detailed\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(this.element).hasText('');\n      assert.dom('.jumbo').exists();\n      assert.dom('.jumbo h2').containsText('Grand Old Mansion');\n      assert.dom('.jumbo p').containsText('a nice place to stay near San Francisco');\n      assert.dom('.jumbo a.button').containsText('Share on Twitter');\n    });\n    (0, _qunit.test)('it renders detailed information about a rental property', async function (assert) {\n      assert.dom('article').hasClass('rental');\n      assert.dom('article h3').containsText('About Grand Old Mansion');\n      assert.dom('article .detail.owner').containsText('Veruca Salt');\n      assert.dom('article .detail.type').containsText('Standalone – Estate');\n      assert.dom('article .detail.location').containsText('San Francisco');\n      assert.dom('article .detail.bedrooms').containsText('15');\n      assert.dom('article .image').exists();\n      assert.dom('article .map').exists();\n    });\n  });\n});","define(\"ember-super-rentals/tests/integration/components/rental/image-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | rental/image', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders the given image', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Rental::Image />\n      */\n      {\n        \"id\": \"J5pw02OV\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"rental/image\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(this.element).hasText('');\n      assert.dom('.image img').exists().hasAttribute('src', '/assets/images/teaching-tomster.png').hasAttribute('alt', 'Teaching Tomster');\n    });\n    (0, _qunit.test)('clicking on the component toggles its size', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Rental::Image\n              src=\"/assets/images/teaching-tomster.png\"\n              alt=\"Teaching Tomster\"\n            />\n          \n      */\n      {\n        \"id\": \"VtiW+0j0\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,\\\"src\\\",\\\"/assets/images/teaching-tomster.png\\\"],[24,\\\"alt\\\",\\\"Teaching Tomster\\\"]],null,null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"rental/image\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('button.image').exists();\n      assert.dom('.image').doesNotHaveClass('large');\n      assert.dom('.image small').hasText('View Larger');\n      await (0, _testHelpers.click)('button.image');\n      assert.dom('.image').hasClass('large');\n      assert.dom('.image small').hasText('View Smaller');\n      await (0, _testHelpers.click)('button.image');\n      assert.dom('.image').doesNotHaveClass('large');\n      assert.dom('.image small').hasText('View Larger');\n    });\n  });\n});","define(\"ember-super-rentals/tests/integration/components/rentals-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | rentals', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Rentals />\n      */\n      {\n        \"id\": \"2ZbA4uNv\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"rentals\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(this.element).hasText(''); // Template block usage:\n\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Rentals>\n              template block text\n            </Rentals>\n          \n      */\n      {\n        \"id\": \"QPN1YXzT\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        template block text\\\\n      \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"rentals\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(this.element).hasText('template block text');\n    });\n  });\n});","define(\"ember-super-rentals/tests/integration/components/rentals/filter-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | rentals/filter', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Rentals::Filter />\n      */\n      {\n        \"id\": \"0BUeUBJ0\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"rentals/filter\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(this.element).hasText(''); // Template block usage:\n\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Rentals::Filter>\n              template block text\n            </Rentals::Filter>\n          \n      */\n      {\n        \"id\": \"Qt599p0x\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        template block text\\\\n      \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"rentals/filter\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(this.element).hasText('template block text');\n    });\n  });\n});","define(\"ember-super-rentals/tests/integration/components/share-button-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/service\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers, _service) {\n  \"use strict\";\n\n  class MockRouterService extends _service.default {\n    get currentURL() {\n      return '/foo/bar?baz=true#some-section';\n    }\n\n  }\n\n  (0, _qunit.module)('Integration | Component | share-button', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.owner.register('service:router', MockRouterService);\n\n      this.tweetParam = param => {\n        let link = (0, _testHelpers.find)('a');\n        let url = new URL(link.href);\n        return url.searchParams.get(param);\n      };\n    });\n    (0, _qunit.test)('basic usage', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <ShareButton>Tweet this!</ShareButton>\n      */\n      {\n        \"id\": \"GSbyilVW\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"Tweet this!\\\"]],[]]]]]],[],false,[\\\"share-button\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('a').hasAttribute('target', '_blank').hasAttribute('rel', 'external nofollow noopener noreferrer').hasAttribute('href', /^https:\\/\\/twitter\\.com\\/intent\\/tweet/).hasClass('share').hasClass('button').containsText('Tweet this!');\n      assert.equal(this.tweetParam('url'), new URL('/foo/bar?baz=true#some-section', window.location.origin));\n    });\n    (0, _qunit.test)('it supports passing @text', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <ShareButton @text=\"Hello Twitter!\">Tweet this!</ShareButton>\n      */\n      {\n        \"id\": \"B6EFBitm\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\"],[\\\"Hello Twitter!\\\"]],[[\\\"default\\\"],[[[[1,\\\"Tweet this!\\\"]],[]]]]]],[],false,[\\\"share-button\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.equal(this.tweetParam('text'), 'Hello Twitter!');\n    });\n    (0, _qunit.test)('it supports passing @hashtags', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <ShareButton @hashtags=\"foo,bar,baz\">Tweet this!</ShareButton>\n      */\n      {\n        \"id\": \"A3XhHF/Z\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@hashtags\\\"],[\\\"foo,bar,baz\\\"]],[[\\\"default\\\"],[[[[1,\\\"Tweet this!\\\"]],[]]]]]],[],false,[\\\"share-button\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.equal(this.tweetParam('hashtags'), 'foo,bar,baz');\n    });\n    (0, _qunit.test)('it supports passing @via', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <ShareButton @via=\"emberjs\">Tweet this!</ShareButton>\n      */\n      {\n        \"id\": \"DcHPI+64\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@via\\\"],[\\\"emberjs\\\"]],[[\\\"default\\\"],[[[[1,\\\"Tweet this!\\\"]],[]]]]]],[],false,[\\\"share-button\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.equal(this.tweetParam('via'), 'emberjs');\n    });\n    (0, _qunit.test)('it supports adding extra classes', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <ShareButton class=\"extra things\">Tweet this!</ShareButton>\n      */\n      {\n        \"id\": \"8aLYpL0j\",\n        \"block\": \"[[[8,[39,0],[[24,0,\\\"extra things\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Tweet this!\\\"]],[]]]]]],[],false,[\\\"share-button\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('a').hasClass('share').hasClass('button').hasClass('extra').hasClass('things');\n    });\n    (0, _qunit.test)('the target, rel and href attributes cannot be overridden', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <ShareButton target=\"_self\" rel=\"\" href=\"/\">Not a Tweet!</ShareButton>\n      */\n      {\n        \"id\": \"YxoJ4lv6\",\n        \"block\": \"[[[8,[39,0],[[24,\\\"target\\\",\\\"_self\\\"],[24,\\\"rel\\\",\\\"\\\"],[24,6,\\\"/\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Not a Tweet!\\\"]],[]]]]]],[],false,[\\\"share-button\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('a').hasAttribute('target', '_blank').hasAttribute('rel', 'external nofollow noopener noreferrer').hasAttribute('href', /^https:\\/\\/twitter\\.com\\/intent\\/tweet/);\n    });\n  });\n});","define(\"ember-super-rentals/tests/test-helper\", [\"ember-super-rentals/app\", \"ember-super-rentals/config/environment\", \"qunit\", \"@ember/test-helpers\", \"qunit-dom\", \"ember-qunit\"], function (_app, _environment, QUnit, _testHelpers, _qunitDom, _emberQunit) {\n  \"use strict\";\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _qunitDom.setup)(QUnit.assert);\n  (0, _emberQunit.start)();\n});","define(\"ember-super-rentals/tests/unit/adapters/application-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Adapter | application', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let adapter = this.owner.lookup('adapter:application');\n      assert.ok(adapter);\n    });\n  });\n});","define(\"ember-super-rentals/tests/unit/models/rental-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Model | rental', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let model = store.createRecord('rental', {});\n      assert.ok(model);\n    });\n  });\n});","define(\"ember-super-rentals/tests/unit/routes/about-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | about', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:about');\n      assert.ok(route);\n    });\n  });\n});","define(\"ember-super-rentals/tests/unit/routes/contact-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | contact', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:contact');\n      assert.ok(route);\n    });\n  });\n});","define(\"ember-super-rentals/tests/unit/routes/index-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | index', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:index');\n      assert.ok(route);\n    });\n  });\n});","define(\"ember-super-rentals/tests/unit/routes/rental-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | rental', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:rental');\n      assert.ok(route);\n    });\n  });\n});","define(\"ember-super-rentals/tests/unit/serializers/application-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Serializer | application', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let serializer = store.serializerFor('application');\n      assert.ok(serializer);\n    });\n    (0, _qunit.test)('it serializes records', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let record = store.createRecord('application', {});\n      let serializedRecord = record.serialize();\n      assert.ok(serializedRecord);\n    });\n  });\n});","define('ember-super-rentals/config/environment', [], function() {\n  var prefix = 'ember-super-rentals';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('ember-super-rentals/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACppGA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}